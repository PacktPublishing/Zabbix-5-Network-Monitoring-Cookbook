<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export>
    <version>5.0</version>
    <date>2020-09-07T10:05:56Z</date>
    <groups>
        <group>
            <name>Linux servers</name>
        </group>
    </groups>
    <templates>
        <template>
            <template>Template OS Linux by SNMPvX</template>
            <name>Template OS Linux by SNMPvX</name>
            <description>This template is created to monitor Linux hosts from Zabbix 5.0 with SNMP. In Zabbix 5.0 we can use SNMP versions on a host level and thus this template is suited for all SNMP versions.&#13;
&#13;
We've created this template as an example in our book and it is not suited for sharing or active monitoring.</description>
            <templates>
                <template>
                    <name>Template OS Linux uptime by SNMPvX</name>
                </template>
            </templates>
            <groups>
                <group>
                    <name>Linux servers</name>
                </group>
            </groups>
            <applications>
                <application>
                    <name>General</name>
                </application>
                <application>
                    <name>Zabbix raw items</name>
                </application>
            </applications>
            <items>
                <item>
                    <name>System hostname</name>
                    <type>SNMP_AGENT</type>
                    <snmp_oid>.1.3.6.1.2.1.1.5.0</snmp_oid>
                    <key>sys.Name</key>
                    <delay>30m</delay>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <applications>
                        <application>
                            <name>General</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{str({$HOSTPREFIX},1)}=0</expression>
                            <name>Hostname does not contain prefix</name>
                            <priority>INFO</priority>
                        </trigger>
                        <trigger>
                            <expression>{str({HOST.HOST},1)}=0</expression>
                            <name>Hostname does not match Zabbix hostname</name>
                            <priority>INFO</priority>
                        </trigger>
                        <trigger>
                            <expression>{diff()}=1</expression>
                            <name>Hostname has changed</name>
                            <priority>INFO</priority>
                        </trigger>
                    </triggers>
                </item>
            </items>
            <discovery_rules>
                <discovery_rule>
                    <name>Discover Network interfaces</name>
                    <type>SNMP_AGENT</type>
                    <snmp_oid>discovery[{#IFNAME},1.3.6.1.2.1.2.2.1.2]</snmp_oid>
                    <key>net.if.discovery</key>
                    <delay>30m</delay>
                    <lifetime>0d</lifetime>
                    <description>OID: 1.3.6.1.2.1.2&#13;
MIB: IF-MIB&#13;
&#13;
Discovery of Network interfaces on Linux host systems.</description>
                    <item_prototypes>
                        <item_prototype>
                            <name>Interface {#IFNAME}: Admin status</name>
                            <type>SNMP_AGENT</type>
                            <snmp_oid>.1.3.6.1.2.1.2.2.1.7.{#SNMPINDEX}</snmp_oid>
                            <key>net.if.Admin.Status.[{#SNMPINDEX}]</key>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Interface {#IFNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <valuemap>
                                <name>IF-MIB::ifOperStatus</name>
                            </valuemap>
                        </item_prototype>
                        <item_prototype>
                            <name>Interface {#IFNAME}: Operational status</name>
                            <type>SNMP_AGENT</type>
                            <snmp_oid>.1.3.6.1.2.1.2.2.1.8.{#SNMPINDEX}</snmp_oid>
                            <key>net.if.Oper.Status.[{#SNMPINDEX}]</key>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Interface {#IFNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <valuemap>
                                <name>IF-MIB::ifOperStatus</name>
                            </valuemap>
                        </item_prototype>
                    </item_prototypes>
                    <trigger_prototypes>
                        <trigger_prototype>
                            <expression>{Template OS Linux by SNMPvX:net.if.Oper.Status.[{#SNMPINDEX}].last(#1)}=0 and {Template OS Linux by SNMPvX:net.if.Admin.Status.[{#SNMPINDEX}].last(#1)}=1</expression>
                            <name>Interface {#IFNAME}: Link is down</name>
                            <priority>WARNING</priority>
                        </trigger_prototype>
                    </trigger_prototypes>
                </discovery_rule>
            </discovery_rules>
            <macros>
                <macro>
                    <macro>{$HOSTPREFIX}</macro>
                    <value>lar-</value>
                    <description>The prefix we want every hostname to contain</description>
                </macro>
            </macros>
        </template>
    </templates>
    <value_maps>
        <value_map>
            <name>IF-MIB::ifOperStatus</name>
            <mappings>
                <mapping>
                    <value>1</value>
                    <newvalue>up</newvalue>
                </mapping>
                <mapping>
                    <value>2</value>
                    <newvalue>down</newvalue>
                </mapping>
                <mapping>
                    <value>4</value>
                    <newvalue>unknown</newvalue>
                </mapping>
                <mapping>
                    <value>5</value>
                    <newvalue>dormant</newvalue>
                </mapping>
                <mapping>
                    <value>6</value>
                    <newvalue>notPresent</newvalue>
                </mapping>
                <mapping>
                    <value>7</value>
                    <newvalue>lowerLayerDown</newvalue>
                </mapping>
            </mappings>
        </value_map>
    </value_maps>
</zabbix_export>
